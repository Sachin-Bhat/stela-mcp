[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "stela-mcp"
dynamic = ["version"]
description = "A Python implementation of a Model Context Protocol server"
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
authors = [
    { name = "Sachin Bhat", email = "sachubhat17@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp[cli]>=1.1.0",
    "typing-extensions>=4.13.0"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "pytest>=8.0.0",
    "pytest-cov>=6.1.0",
    "pytest-asyncio>=0.23.0"
]

[project.urls]
Homepage = "https://github.com/Sachin-Bhat/stela-mcp"
Documentation = "https://github.com/Sachin-Bhat/stela-mcp#readme"
Repository = "https://github.com/Sachin-Bhat/stela-mcp.git"
Issues = "https://github.com/Sachin-Bhat/stela-mcp/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/stela_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "src/stela_mcp/*.py",
]

[project.scripts]
stela-mcp = "stela_mcp.server:main"

[tool.hatch.version]
source = "regex"
pattern = "^__version__ = [\"'](?P<version>.*)[\"']"
path = "src/stela_mcp/__init__.py"

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "A",   # flake8-builtins
]
ignore = [
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
]

[tool.ruff.isort]
known-first-party = ["stela_mcp"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/stela_mcp --cov-report=term-missing"

