# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv and set Python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Install dependencies
      run: |
        uv pip install --system ".[dev]"
        
    - name: Lint with ruff
      uses: astral-sh/ruff-action@v1
      with:
        args: check --output-format=github
        
    - name: Format with ruff
      uses: astral-sh/ruff-action@v1
      with:
        args: format --check
        
    - name: Type check with mypy
      run: |
        mypy src/
        
    # - name: Test with pytest
    #   run: |
    #     pytest tests/ -v --cov=src/ --cov-report=xml
        
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     file: ./coverage.xml
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv and set Python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: "3.12"
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Build package
      run: |
        uv build --no-sources
        
    - name: Publish to PyPI
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        uv publish
